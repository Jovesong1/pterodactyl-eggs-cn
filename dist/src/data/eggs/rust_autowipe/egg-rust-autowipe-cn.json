{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-02-02T22:25:49-05:00",
    "name": "Rust Autowipe",
    "author": "support@pterodactyl.io",
    "description": "在Rust中唯一的目标就是生存。为了做到这一点，你需要克服饥饿、口渴和寒冷等困难。生火。建造庇护所。杀死动物获取肉食。保护自己免受其他玩家的伤害，并杀死他们获取肉食。与其他玩家结盟并建立一个城镇。做任何必要的事情来生存。",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/pterodactyl\/games:rust": "ghcr.io\/pterodactyl\/games:rust"
    },
    "file_denylist": [],
    "startup": "\".\/RustDedicated -batchmode +server.port {{SERVER_PORT}} +server.queryport {{QUERY_PORT}} +server.identity \"rust\" +rcon.ip 0.0.0.0 +rcon.port {{RCON_PORT}} +rcon.web true +server.hostname \\\"{{HOSTNAME}}\\\" +server.level \\\"{{LEVEL}}\\\" +server.description \\\"{{DESCRIPTION}}\\\" +server.url \\\"{{SERVER_URL}}\\\" +server.headerimage \\\"{{SERVER_IMG}}\\\" +server.maxplayers {{MAX_PLAYERS}} +rcon.password \\\"{{RCON_PASS}}\\\" +app.port {{APP_PORT}} +server.saveinterval {{SAVEINTERVAL}} $( [ -z ${MAP_URL} ] && printf %s \"+server.worldsize \\\"{{WORLD_SIZE}}\\\" +server.seed \\\"$( if [ -f seed.txt ] && [[ ${WORLD_SEED} == \"0\" ]]; then printf %s $(cat seed.txt); else printf %s ${WORLD_SEED}; fi )\\\"\"|| printf %s \"+server.levelurl {{MAP_URL}}\" ) {{ADDITIONAL_ARGS}}\"",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Server startup complete\"\r\n}",
        "logs": "{}",
        "stop": "quit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'ghcr.io\/ptero-eggs\/installers:debian'\r\n\r\n##\r\n#\r\n# Variables\r\n# STEAM_USER, STEAM_PASS, STEAM_AUTH - Steam user setup. If a user has 2fa enabled it will most likely fail due to timeout. Leave blank for anon install.\r\n# WINDOWS_INSTALL - if it's a windows server you want to install set to 1\r\n# SRCDS_APPID - steam app id found here - https:\/\/developer.valvesoftware.com\/wiki\/Dedicated_Servers_List\r\n# SRCDS_BETAID - beta branch of a steam app. Leave blank to install normal branch\r\n# SRCDS_BETAPASS - password for a beta branch should one be required during private or closed testing phases.. Leave blank for no password.\r\n# INSTALL_FLAGS - Any additional SteamCMD  flags to pass during install.. Keep in mind that steamcmd auto update process in the docker image might overwrite or ignore these when it performs update on server boot.\r\n# AUTO_UPDATE - Adding this variable to the egg allows disabling or enabling automated updates on boot. Boolean value. 0 to disable and 1 to enable.\r\n#\r\n ##\r\n\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## add below your custom commands if needed\r\n\r\n\r\nif [ ${REGEN_SERVER} == \"1\" ]; then\r\n    cd \/mnt\/server\/\r\n    rm -rf ${REMOVE_FILES}\r\nfi\r\n\r\nif [ $WORLD_SEED == \"0\" ]; then\r\n    if [ ! -f \/mnt\/server\/seed.txt ]; then\r\n        rm -sf \/mnt\/server\/seed.txt\r\n    fi\r\n    \r\n    cat \/dev\/urandom | tr -dc '1-9' | fold -w 5 | head -n 1 > \/mnt\/server\/seed.txt\r\nfi\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/ptero-eggs\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "SRCDS_APPID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "258550",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "最大玩家数",
            "description": "服务器同时允许的最大玩家数量。",
            "env_variable": "MAX_PLAYERS",
            "default_value": "40",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "服务器名称",
            "description": "公共服务器列表中您的服务器名称。",
            "env_variable": "HOSTNAME",
            "default_value": "A Rust Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:40",
            "field_type": "text"
        },
        {
            "name": "地图",
            "description": "Rust使用的世界文件。",
            "env_variable": "LEVEL",
            "default_value": "Procedural Map",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "描述",
            "description": "服务器标题下的描述。通常用于规则和信息。使用\\n换行。",
            "env_variable": "DESCRIPTION",
            "default_value": "Powered by Pterodactyl",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "网址",
            "description": "您服务器的URL。这是点击"访问网站"按钮时出现的内容。",
            "env_variable": "SERVER_URL",
            "default_value": "http:\/\/pterodactyl.io",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|url",
            "field_type": "text"
        },
        {
            "name": "世界大小",
            "description": "程序生成地图的世界大小。",
            "env_variable": "WORLD_SIZE",
            "default_value": "3000",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "世界种子",
            "description": "程序生成地图的种子。",
            "env_variable": "WORLD_SEED",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "服务器图片",
            "description": "服务器列表顶部的标题图片。",
            "env_variable": "SERVER_IMG",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|url",
            "field_type": "text"
        },
        {
            "name": "RCON端口",
            "description": "RCON连接的端口。",
            "env_variable": "RCON_PORT",
            "default_value": "28016",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "RCON密码",
            "description": "RCON访问密码。",
            "env_variable": "RCON_PASS",
            "default_value": "CHANGEME",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|regex:\/^[\\w.-]*$\/|max:64",
            "field_type": "text"
        },
        {
            "name": "保存间隔",
            "description": "设置服务器的自动保存间隔（秒）。",
            "env_variable": "SAVEINTERVAL",
            "default_value": "60",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "额外参数",
            "description": "向服务器添加额外的启动参数。",
            "env_variable": "ADDITIONAL_ARGS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "重新生成服务器",
            "description": "如果在重新安装时应删除服务器文件并重新生成服务器种子。",
            "env_variable": "REGEN_SERVER",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "要删除的文件",
            "description": "重新安装时重新生成服务器时要删除的文件列表，以空格分隔。",
            "env_variable": "REMOVE_FILES",
            "default_value": "server\/rust\/player.deaths.*.db server\/rust\/player.identities.*.db server\/rust\/player.states.*.db server\/rust\/player.tokens.db proceduralmap.*.*.*.map server\/rust\/proceduralmap.*.*.*.sav oxide\/data\/Kits_Data.json oxide\/data\/NTeleportationHome.json oxide\/data\/ServerRewards\/player_data.json oxide\/data\/PTTracker\/playtime_data.json",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "查询端口",
            "description": "查询连接的端口。",
            "env_variable": "QUERY_PORT",
            "default_value": "28017",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "应用端口",
            "description": "Rust+应用程序的端口。-1表示禁用。",
            "env_variable": "APP_PORT",
            "default_value": "28082",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "自定义地图URL",
            "description": "用直接下载URL中的地图覆盖地图。无效的URL将导致服务器崩溃。",
            "env_variable": "MAP_URL",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|url",
            "field_type": "text"
        },
        {
            "name": "模组框架",
            "description": "要使用的模组框架：carbon、oxide、vanilla。\r\n默认为"vanilla"表示非模组服务器安装。",
            "env_variable": "FRAMEWORK",
            "default_value": "vanilla",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:vanilla,carbon,oxide",
            "field_type": "text"
        }
    ]
} 