{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "update_url": null,
        "version": "PTDL_v2"
    },
    "exported_at": "2024-06-02T14:40:52+00:00",
    "name": "owncast.online",
    "author": "psychoalex@thevcbc.com",
    "description": "Owncast是一个自托管的直播视频和网页聊天服务器，可与现有流行的广播软件一起使用。",
    "features": null,
    "docker_images": {
        "ghcr.io/pterodactyl/yolks:debian": "ghcr.io/pterodactyl/yolks:debian"
    },
    "file_denylist": [],
    "startup": "./owncast -webserverport {{SERVER_PORT}} -rtmpport {{RTMP_PORT}} -streamkey {{STREAM_KEY}}",
    "config": {
        "files": "{}",
        "logs": "{}",
        "startup": "{\r\n    \"done\": \"The web admin interface is available at /admin.\"\r\n}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "container": "ghcr.io/ptero-eggs/installers:debian",
            "entrypoint": "bash",
            "script": "#!/bin/bash\r\n\r\n#Make Server Dir\r\nif [ ! -d /mnt/server/ ]; then\r\n    mkdir /mnt/server/\r\nfi\r\ncd /mnt/server/\r\n\r\n#Get Dependencies\r\napt-get -y update\r\napt-get -y install curl unzip tar jq\r\n\r\n#Get Owncast Install Files\r\n\r\nif [ -z \"${GITHUB_USER}\" ] \u0026\u0026 [ -z \"${GITHUB_OAUTH_TOKEN}\" ] ; then\r\n    echo -e \"using anon api call\"\r\nelse\r\n    echo -e \"user and oauth token set\"\r\n    alias curl='curl -u ${GITHUB_USER}:${GITHUB_OAUTH_TOKEN} '\r\nfi\r\n\r\n## get release info and download links\r\nLATEST_JSON=$(curl --silent \"https://api.github.com/repos/${GITHUB_PACKAGE}/releases/latest\")\r\nRELEASES=$(curl --silent \"https://api.github.com/repos/${GITHUB_PACKAGE}/releases\")\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i ${MATCH})\r\nelse\r\n    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n    if [ \"${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n        DOWNLOAD_URL=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i ${MATCH})\r\n    else\r\n        echo -e \"defaulting to latest release\"\r\n        DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)\r\n    fi\r\nfi\r\n\r\necho Download URL is: ${DOWNLOAD_URL}\r\n\r\ncurl -L ${DOWNLOAD_URL} --output ./owncast_installer.zip\r\n\r\n#curl -L https://github.com/owncast/owncast/releases/download/v${OWNCAST_VERSION}/owncast-${OWNCAST_VERSION}-linux-64bit.zip --output ./owncast_installer.zip\r\n\r\n#Unzip Install Files\r\nunzip -o -q ./owncast_installer.zip\r\nrm ./owncast_installer.zip\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\""
        }
    },
    "variables": [
        {
            "name": "RTMP端口",
            "description": "用于接收流数据的端口。",
            "env_variable": "RTMP_PORT",
            "default_value": "8091",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "流媒体/管理员密钥",
            "description": "用于验证网页管理界面身份，以及验证您的流媒体。",
            "env_variable": "STREAM_KEY",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|min:32|max:128",
            "field_type": "text"
        },
        {
            "name": "Owncast版本",
            "description": "您想要安装的Owncast版本，来自https://github.com/owncast/owncast/releases\r\n例如 - '0.0.11'表示特定版本或'latest'表示最新版本。",
            "env_variable": "VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Github仓库",
            "description": "用于识别要从中拉取发布版本的github仓库。",
            "env_variable": "GITHUB_PACKAGE",
            "default_value": "owncast/owncast",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:120",
            "field_type": "text"
        },
        {
            "name": "Github文件匹配",
            "description": "用于识别发布版本下的特定资产以供下载。",
            "env_variable": "MATCH",
            "default_value": "linux-64bit",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Github用户",
            "description": "如果您的调用次数超过github匿名API用户允许的次数，则需要此项。",
            "env_variable": "GITHUB_USER",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Github OAuth令牌",
            "description": "如果您的调用次数超过github匿名API用户允许的次数，则需要此项。",
            "env_variable": "GITHUB_OAUTH_TOKEN",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        }
    ]
} 