{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "update_url": null,
        "version": "PTDL_v2"
    },
    "exported_at": "2024-06-01T19:44:06+00:00",
    "name": "Ree6",
    "author": "presti@presti.me",
    "description": "全能、开源且100%免费的Discord机器人！",
    "features": null,
    "docker_images": {
        "Java_17": "ghcr.io/pterodactyl/yolks:java_17"
    },
    "file_denylist": [],
    "startup": "java -Dnogui=true -jar Ree6.jar",
    "config": {
        "files": "{\r\n    \"config.yml\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"hikari.sql.user\": \"{{server.build.env.DATABASE_USER}}\",\r\n            \"hikari.sql.db\": \"{{server.build.env.DATABASE_DB}}\",\r\n            \"hikari.sql.pw\": \"{{server.build.env.DATABASE_PW}}\",\r\n            \"hikari.sql.host\": \"{{server.build.env.DATABASE_HOST}}\",\r\n            \"hikari.sql.port\": \"{{server.build.env.DATABASE_PORT}}\",\r\n            \"hikari.misc.storage\": \"{{server.build.env.DATABASE_TYP}}\",\r\n            \"hikari.misc.storageFile\": \"{{server.build.env.DATABASE_FILE}}\",\r\n            \"hikari.misc.poolSize\": \"{{server.build.env.DATABASE_POOL}}\",\r\n            \"hikari.misc.createEmbeddedServer\": \"{{server.build.env.DATABASE_EMBEDDED}}\",\r\n            \"heartbeat.url\": \"{{server.build.env.HEARTBEAT_URL}}\",\r\n            \"heartbeat.interval\": \"{{server.build.env.HEARTBEAT_INTERVAL}}\",\r\n            \"dagpi.apitoken\": \"{{server.build.env.DAGPI_TOKEN}}\",\r\n            \"amari.apitoken\": \"{{server.build.env.AMARI_TOKEN}}\",\r\n            \"sentry.dsn\": \"{{server.build.env.SENTRY_DSN}}\",\r\n            \"spotify.client.id\": \"{{server.build.env.SPOTIFY_CLIENT_ID}}\",\r\n            \"spotify.client.secret\": \"{{server.build.env.SPOTIFY_CLIENT_SECRET}}\",\r\n            \"twitch.client.id\": \"{{server.build.env.TWITCH_CLIENT_ID}}\",\r\n            \"twitch.client.secret\": \"{{server.build.env.TWITCH_CLIENT_SECRET}}\",\r\n            \"twitter.consumer.key\": \"{{server.build.env.TWITTER_CONSUMER_ID}}\",\r\n            \"twitter.consumer.secret\": \"{{server.build.env.TWITTER_CONSUMER_SECRET}}\",\r\n            \"twitter.access.key\": \"{{server.build.env.TWITTER_ACCESS_ID}}\",\r\n            \"twitter.access.secret\": \"{{server.build.env.TWITTER_ACCESS_SECRET}}\",\r\n            \"reddit.client.id\": \"{{server.build.env.REDDIT_CLIENT_ID}}\",\r\n            \"reddit.client.secret\": \"{{server.build.env.REDDIT_CLIENT_SECRET}}\",\r\n            \"instagram.username\": \"{{server.build.env.INSTAGRAM_USERNAME}}\",\r\n            \"instagram.password\": \"{{server.build.env.INSTAGRAM_PASSWORD}}\",\r\n            \"bot.tokens.release\": \"{{server.build.env.BOT_TOKEN}}\",\r\n            \"openai.apiToken\": \"{{server.build.env.AI_TOKEN}}\",\r\n            \"openai.apiUrl\": \"{{server.build.env.AI_URL}}\",\r\n            \"openai.model\": \"{{server.build.env.AI_MODEL}}\",\r\n            \"bot.misc.status\": \"{{server.build.env.MISC_STATUS}}\",\r\n            \"bot.misc.feedbackChannelId\": \"{{server.build.env.MISC_FEEDBACK}}\",\r\n            \"bot.misc.ownerId\": \"{{server.build.env.MISC_OWNER}}\",\r\n            \"bot.misc.predefineInformation\": \"{{server.build.env.MISC_PREDEF}}\",\r\n            \"bot.misc.invite\": \"{{server.build.env.MISC_INVITE}}\",\r\n            \"bot.misc.support\": \"{{server.build.env.MISC_SUPPORT}}\",\r\n            \"bot.misc.website\": \"{{server.build.env.MISC_WEB}}\",\r\n            \"bot.misc.webinterface\": \"{{server.build.env.MISC_INTERFACE}}\",\r\n            \"bot.misc.recording\": \"{{server.build.env.MISC_RECORD}}\",\r\n            \"bot.misc.twitchAuth\": \"{{server.build.env.MISC_TWITCH}}\",\r\n            \"bot.misc.advertisement\": \"{{server.build.env.MISC_ADV}}\",\r\n            \"bot.misc.name\": \"{{server.build.env.MISC_NAME}}\",\r\n            \"bot.misc.shards\": \"{{server.build.env.MISC_SHARD}}\"\r\n        }\r\n    }\r\n}",
        "logs": "{}",
        "startup": "{\r\n    \"done\": \"Finished Loading\"\r\n}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "container": "ghcr.io/ptero-eggs/installers:debian",
            "entrypoint": "bash",
            "script": "#!/bin/bash\r\n## this is a simple script to use the github API for release versions.\r\n## this requires the egg has a variable for GITHUB_PACKAGE and VERSION\r\n## this supports using oauth/personal access tokens via GITHUB_USER and GITHUB_OAUTH_TOKEN (both are required.)\r\n## if you are getting hit with GitHub API limit issues then you need to have the user and token set.\r\napt update\r\napt install -y jq curl\r\n\r\n\r\nCONFIG_LINK=\"https://raw.githubusercontent.com/ptero-eggs/application-eggs/main/bots/discord/ree6/config.yml\"\r\nLATEST_JSON=$(curl --silent \"https://api.github.com/repos/Ree6-Applications/Ree6/releases/latest\")\r\nRELEASES=$(curl --silent \"https://api.github.com/repos/Ree6-Applications/Ree6/releases\")\r\nMATCH=jar-with-dependencies.jar\r\n\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i \"${MATCH}\" | head -1 )\r\nelse\r\n    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n    if [ \"${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n        DOWNLOAD_URL=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i \"${MATCH}\" | head -1)\r\n    else\r\n        echo -e \"defaulting to latest release\"\r\n        DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i *.jar)\r\n    fi\r\nfi\r\n\r\n## Ree6 Setup\r\n[ ! -d /mnt/server ] \u0026\u0026 mkdir -p /mnt/server\r\n\r\nif [ ! -z \"${DOWNLOAD_URL}\" ]; then \r\n    if curl --output /dev/null --silent --head --fail ${DOWNLOAD_URL}; then\r\n        echo -e \"link is valid. setting download link to ${DOWNLOAD_URL}\"\r\n        DOWNLOAD_LINK=${DOWNLOAD_URL}\r\n    else        \r\n        echo -e \"link is invalid closing out\"\r\n        exit 2\r\n    fi\r\nfi\r\n\r\ncd /mnt/server\r\necho -e \"\\nInstalling/Updating Ree6...\\n\"\r\n\r\nif [ -f Ree6.jar ]; then\r\n    echo -e \"Updating Ree6.jar to latest version...\"\r\n    echo -e '\\t(Old version can be found at \"Ree6.jar-old\")'\r\n    mv -f Ree6.jar Ree6.jar-old\r\nfi\r\n\r\necho -e \"Running: curl -sSL -o Ree6.jar ${DOWNLOAD_LINK}\\n\"\r\ncurl -sSL -o  Ree6.jar ${DOWNLOAD_LINK}\r\n\r\nif [ -f config.yml ]; then\r\n    echo -e \"Updating config.yml to latest version...\"\r\n    echo -e '\\t(Old version can be found at \"config.yml-old\")'\r\n    mv -f config.yml config.yml-old\r\nfi\r\n\r\necho -e \"Running: curl -sSL -o config.yml ${CONFIG_LINK}\\n\"\r\ncurl -sSL -o config.yml ${CONFIG_LINK}\r\n    \r\n\r\necho -e \"\\nRee6 Successfully Installed!\""
        }
    },
    "variables": [
        {
            "name": "[必填] Discord机器人令牌",
            "description": "Discord机器人的令牌。了解如何获取令牌并正确配置您的机器人应用程序：https://jmusicbot.com/getting-a-bot-token/",
            "env_variable": "BOT_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Dagpi令牌",
            "description": "您的Dagpi.xyz API令牌，用于推文图像生成！",
            "env_variable": "DAGPI_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Sentry DSN",
            "description": "您的Sentry DSN，用于错误报告！",
            "env_variable": "SENTRY_DSN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Spotify客户端ID",
            "description": "Spotify应用程序配置，用于将Spotify曲目/播放列表解析为YouTube搜索查询。",
            "env_variable": "SPOTIFY_CLIENT_ID",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Spotify客户端密钥",
            "description": "Spotify应用程序配置，用于将Spotify曲目/播放列表解析为YouTube搜索查询。",
            "env_variable": "SPOTIFY_CLIENT_SECRET",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "心跳URL",
            "description": "心跳服务器的URL",
            "env_variable": "HEARTBEAT_URL",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string",
            "field_type": "text"
        },
        {
            "name": "心跳间隔",
            "description": "心跳之间的间隔。",
            "env_variable": "HEARTBEAT_INTERVAL",
            "default_value": "60",
            "user_viewable": true,
            "user_editable": true,
            "rules": "integer",
            "field_type": "text"
        }
    ]
} 