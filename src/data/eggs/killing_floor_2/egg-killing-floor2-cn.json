{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-04-01T12:20:07+02:00",
    "name": "Killing Floor 2",
    "author": "parker@parkervcp.com",
    "description": "在《杀戮间2》中，玩家进入被可怕的、嗜血的克隆体Zeds占领的欧洲大陆，这些克隆体是由Horzine公司创造的。由Horzine生物科技失败实验引起的Zed爆发以势不可挡的势头迅速蔓延，瘫痪了欧盟。就在一个月前，原版《杀戮间》中的第一次Zed爆发席卷了伦敦；现在这些实验体克隆体已经无处不在。",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/ptero-eggs\/steamcmd:debian": "ghcr.io\/ptero-eggs\/steamcmd:debian"
    },
    "file_denylist": [],
    "startup": "\/home\/container\/Binaries\/Win64\/KFGameSteamServer.bin.x86_64 {{MAP_NAME}}?Port={{SERVER_PORT}}?QueryPort={{QUERY_PORT}}?AdminPassword={{ADMIN_PASS}}?Difficulty={{DIFFICULTY}}$( [ \"$WEB_ADMIN\" == \"true\" ] || printf %s '??WebAdminPort={{WEB_ADMIN_PORT}}' )",
    "config": {
        "files": "{\r\n    \"KFGame\/Config\/KFWeb.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"bEnabled\": \"benabled={{server.build.env.WEB_ADMIN}}\",\r\n            \"ListenPort\": \"ListenPort={{server.build.env.WEB_ADMIN_PORT}}\"\r\n        }\r\n    },\r\n    \"KFGame\/Config\/LinuxServer-KFGame.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"AdminPassword\": \"AdminPassword={{server.build.env.ADMIN_PASS}}\",\r\n            \"ServerName\": \"ServerName={{server.build.env.SERVER_NAME}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"DevOnline: Playfab server registered with lobby ID \"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'ghcr.io\/ptero-eggs\/installers:debian'\r\n\r\n##\r\n#\r\n# Variables\r\n# STEAM_USER, STEAM_PASS, STEAM_AUTH - Steam user setup. If a user has 2fa enabled it will most likely fail due to timeout. Leave blank for anon install.\r\n# WINDOWS_INSTALL - if it's a windows server you want to install set to 1\r\n# SRCDS_APPID - steam app id found here - https:\/\/developer.valvesoftware.com\/wiki\/Dedicated_Servers_List\r\n# SRCDS_BETAID - beta branch of a steam app. Leave blank to install normal branch\r\n# SRCDS_BETAPASS - password for a beta branch should one be required during private or closed testing phases.. Leave blank for no password.\r\n# INSTALL_FLAGS - Any additional SteamCMD  flags to pass during install.. Keep in mind that steamcmd auto update process in the docker image might overwrite or ignore these when it performs update on server boot.\r\n# AUTO_UPDATE - Adding this variable to the egg allows disabling or enabling automated updates on boot. Boolean value. 0 to disable and 1 to enable.\r\n#\r\n ##\r\n\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## add below your custom commands if needed\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/ptero-eggs\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Steam用户名",
            "description": "用于安装服务器的Steam用户名。\r\n\r\n仅适用于需要拥有服务器的用户的游戏",
            "env_variable": "STEAM_USER",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Steam密码",
            "description": "安装服务器的Steam账户的密码。",
            "env_variable": "STEAM_PASS",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Steam验证",
            "description": "很可能在使用之前就超时。",
            "env_variable": "STEAM_AUTH",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string|max:6",
            "field_type": "text"
        },
        {
            "name": "Steam服务器应用ID",
            "description": "服务器的应用ID",
            "env_variable": "SRCDS_APPID",
            "default_value": "232130",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:232130",
            "field_type": "text"
        },
        {
            "name": "额外参数",
            "description": "仅在特定情况下需要。",
            "env_variable": "EXTRA_FLAGS",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "地图名称",
            "description": "服务器启动时加载的地图\r\n\r\n默认 - 'kf-bioticslab'",
            "env_variable": "MAP_NAME",
            "default_value": "kf-bioticslab",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "查询端口",
            "description": "Steam用于查询服务器的端口。",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|numeric|max:65535",
            "field_type": "text"
        },
        {
            "name": "启用网页管理(测试版)",
            "description": "",
            "env_variable": "WEB_ADMIN",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|in:true,false",
            "field_type": "text"
        },
        {
            "name": "管理员密码",
            "description": "服务器的管理员密码。",
            "env_variable": "ADMIN_PASS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "服务器名称",
            "description": "这是在服务器中和服务器浏览器中向所有玩家显示的服务器名称",
            "env_variable": "SERVER_NAME",
            "default_value": "A Pterodactyl Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "服务器难度",
            "description": "0 = 普通, 1 = 困难, 2 = 自杀式, 3 = 地狱难度",
            "env_variable": "DIFFICULTY",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric|in:0,1,2,3",
            "field_type": "text"
        },
        {
            "name": "网页管理端口",
            "description": "网页管理面板应使用的端口。这是一个测试功能。",
            "env_variable": "WEB_ADMIN_PORT",
            "default_value": "8089",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "自动更新",
            "description": "在启动时自动更新服务器。",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        }
    ]
} 